package com.smhrd.member.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.smhrd.member.model.MemberDAO;
import com.smhrd.member.model.MemberDTO;

public class MemberEditLoginCon extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        HttpSession session = request.getSession(true);

        String mem_id = null;
        String mem_pw = request.getParameter("pw");

        if (session != null) {
            mem_id = (String) session.getAttribute("savedId");
        }

        if (mem_id == null) {
            // 세션에서 아이디가 없으면 쿠키에서 가져오기
            Cookie[] cookies = request.getCookies();
            if (cookies != null) {
                for (Cookie cookie : cookies) {
                    if ("savedId".equals(cookie.getName())) {
                        mem_id = cookie.getValue();
                        break;
                    }
                }
            }
        }

        if (mem_id == null) {
            // 세션과 쿠키에서도 아이디를 찾을 수 없으면 오류 처리
            session.setAttribute("errorMessage", "Session expired or invalid request.");
            response.sendRedirect("mem_info.jsp");
            return;
        }

        // DAO를 사용하여 사용자 정보를 확인
        MemberDAO dao = new MemberDAO();
        MemberDTO member = dao.login(new MemberDTO(mem_id, mem_pw, null, null, null, null, null));

        if (member != null) {
            // 비밀번호가 일치하면 세션에 아이디 저장
            session.setAttribute("savedId", mem_id);
            response.sendRedirect("mem_info_modify.jsp");
        } else {
            // 비밀번호가 일치하지 않으면 오류 처리
            session.setAttribute("errorMessage", "Invalid login credentials.");
            response.sendRedirect("mem_info.jsp");
        }
    }
}
