package com.smhrd.ingredient.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.smhrd.ingredient.model.IngredientDAO;
import com.smhrd.ingredient.model.IngredientDTO;
import com.smhrd.member.model.MemberDTO;

public class IngredientSearchCon extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void service(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // 1. 한글 인코딩 설정
        request.setCharacterEncoding("UTF-8");

        // 2. 세션 가져오기
        HttpSession session = request.getSession(true);
        MemberDTO member = (MemberDTO) session.getAttribute("loginMember");
     // 5. 쿠키에서 아이디 가져오기
     		if (member == null) {
     			Cookie[] cookies = request.getCookies();

     			if (cookies != null) {
     				for (Cookie cookie : cookies) {
     					if (cookie.getName().equals("savedId")) {
     						String savedId = cookie.getValue();
     						System.out.println("Saved Id from cookie: " + savedId);

     						IngredientDAO dao = new IngredientDAO();
     				        List<IngredientDTO> ingredientList = dao.search(savedId); // 해당 회원의 모든 품목 조회
     				        request.setAttribute("ingredientList", ingredientList);
     				       System.out.println(ingredientList);
     				      RequestDispatcher dis = request.getRequestDispatcher("my_fridge.jsp");
     				        dis.forward(request, response);


     						return; // 처리 완료 후 리턴
     					}
     				}
     			}

     			// 쿠키에 저장된 아이디가 없는 경우
     			System.out.println("쿠키에 저장된 아이디가 없습니다.");
     			response.sendRedirect("login.jsp"); // 예시로 로그인 페이지로 리다이렉트
     		} else {
     			// 세션에 저장된 회원 정보로 IngredientDTO 생성
     			String id = member.getMem_id();
     			System.out.println("Saved Id from session: " + id);

     			IngredientDAO dao = new IngredientDAO();
     	        List<IngredientDTO> ingredientList = dao.search(id); // 해당 회원의 모든 품목 조회
     	        request.setAttribute("ingredientList", ingredientList);

     	        System.out.println(ingredientList);
     	        RequestDispatcher dis = request.getRequestDispatcher("my_fridge.jsp");
     	        dis.forward(request, response);

     		}
     	}
     }
