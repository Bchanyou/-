package com.smhrd.ingredient.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.smhrd.ingredient.model.IngredientDAO;
import com.smhrd.ingredient.model.IngredientDTO;
import com.smhrd.member.model.MemberDAO;
import com.smhrd.member.model.MemberDTO;

public class IngredientAddCon extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		System.out.println("join controller!");
		// 1. 한글 인코딩
		request.setCharacterEncoding("UTF-8");
		
		HttpSession session = request.getSession(true);// 세션 생성
		
		// 2. 데이터 가지고 오기
		String ingre_name=request.getParameter("name");
		String ingre_unit=request.getParameter("unit");
		String ingre_bundle=request.getParameter("unit_stock");
		String ingre_stock=request.getParameter("stock");
		String purchased_at = request.getParameter("date_buy");
		String expired_at = request.getParameter("date_exp");
		String ingre_loc = request.getParameter("location");
		

		MemberDTO member=(MemberDTO)session.getAttribute("loginMember");
		IngredientDTO ingredient =null;
		if(member==null) {
//			response.sendRedirect("login.jsp");
			Cookie[] cookies = request.getCookies();

	        if (cookies != null) {
	            for (Cookie cookie : cookies) {
	                if (cookie.getName().equals("savedId")) {
	                    String savedId = cookie.getValue();
	                    System.out.println("Saved Id: " + savedId);

	                    // 원하는 작업 수행 (예: 사용자에게 보여주기)
	                    response.getWriter().write("Saved Id: " + savedId);
	                    return; // 여기서 작업을 마치고 리턴
	                    IngredientDTO ingredient = new IngredientDTO(savedId, ingre_name, purchased_at, expired_at, ingre_unit, ingre_stock, ingre_bundle, ingre_loc);
	                }
	            }
	        }
		}else {
			
			System.out.println(member);
			String id=member.getMem_id();
			System.out.println(id);
			String pw=member.getMem_pw();
			System.out.println(pw);
			
			IngredientDTO ingredient = new IngredientDTO(id, ingre_name, purchased_at, expired_at, ingre_unit, ingre_stock, ingre_bundle, ingre_loc);
			
			
		}
		
		IngredientDAO dao = new IngredientDAO();
		int row = dao.add(ingredient);
		if (row > 0) {
			// 회원가입 성공
			System.out.println("품목추가 성공");
			response.sendRedirect("my_fridge.jsp");
		} else {
			// 회원가입 실패
			System.out.println("품목추가 실패");
			response.sendRedirect("my_fridge.jsp");
		}
	}

}
